# Blueprint metadata
blueprint:
  name: Prise - Contrôle basé sur la consommation électrique
  description: |
    To-do
    
  domain: automation
  
  input:
    plug_device:
      name: Prise à contrôler
      description: |
        To-do
      selector:
        device:
          entity:
            domain: switch
    plug_power_sensor:
      name: Capteur de consommation électrique de la prise à contrôler
      description: |
        To-do
      selector:
        entity:
          domain: sensor
    activation_threshold:
      name: Seuil d'activation de l'automatisation
      description: |
        To-do
      default: 1
      selector:
        number:
          min: 1
          max: 3680
          unit_of_measurement: 'W'
          mode: box
    activation_delay:
      name: Délai avant activation de l'automatisation
      description: |
        To-do
      selector:
        duration:
    check_power:
      name: Vérification de la consommation avant activation de l'automatisation
      description: |
        To-do
      default: True
      selector:
        boolean:
    check_state:
      name: Vérification de l'état de la prise avant activation de l'automatisation
      description: |
        To-do
      default: True
      selector:
        boolean:
    send_notification:
      name: Envoyer une notification après activation de l'automatisation
      description: |
        To-do
      default: True
      selector:
        boolean:
    notification_destination:
      name: Destination de la notification
      description: |
        To-do
      selector:
        device:
    notification_title:
      name: Titre de la notification
      description: |
        To-do
      default: []
      selector:
        text:
    notification_message:
      name: Contenu de la notification
      description: |
        To-do
      default: []
      selector:
        text:
          multiline: True

variables:
  plug_device: !input plug_device
  plug_power_sensor: !input plug_power_sensor
  activation_threshold: !input activation_threshold
  activation_delay: !input activation_delay
  check_state: !input check_state
  send_notification: !input send_notification
  notification_destination: !input notification_destination
  notification_title: !input notification_title
  notification_message: !input notification_message

trigger_variables:
  plug_power_sensor: !input plug_power_sensor
  activation_threshold: !input activation_threshold

mode: unique
max_exceeded: silent

trigger: 
  - platform: template
    value_template: '{{ states(plug_power_sensor) | float < activation_threshold }}'
condition: []
action:
  - delay: '{{ activation_delay }}'
  - choose:
      - conditions: '{{ if check_power }}'
        sequence:
          - condition: '{{ states(plug_power_sensor) | float < activation_threshold }}'
  - service:  switch.turn_off
    data_template:
      device_id: '{{ plug_device }}'
