blueprint:
  name: Aqara - Interrupteur sans-fil double (WRS-R02)
  description: |
    # Aqara - Interrupteur sans-fil double (WRS-R02)
    
    Grâce aux automatisations créées avec ce blueprint, il est possible
    d'exécuter tout type d'actions, via l'utilisation de l'interrupteur.
    
    Toutes les actions permises par l'interrupteur sont prises en comptes.
    
    Version 2021.12.7
  domain: automation
  input:
    controller_entity:
      name: Contrôleur
      description: Capteur d'action du contrôleur à utiliser pour l'automatisation.
      selector:
        entity:
          domain: sensor

    left_press_single:
      name: Gauche - appui simple
      description: Action(s) à exécuter lors d'un appui simple sur l'interrupteur gauche.
      default: []
      selector:
        action:
    
    left_press_double:
      name: Gauche - appui double
      description: Action(s) à exécuter lors d'un appui double sur l'interrupteur gauche.
      default: []
      selector:
        action:
    
    left_press_triple:
      name: Gauche - appui triple
      description: Action(s) à exécuter lors d'un appui triple sur l'interrupteur gauche.
      default: []
      selector:
        action:

    left_press_hold:
      name: Gauche - appui maintenu
      description: Action(s) à exécuter lors d'un appui maintenu sur l'interrupteur gauche.
      default: []
      selector:
        action: {}

    right_press_single:
      name: Droit - appui simple
      description: Action(s) à exécuter lors d'un appui simple sur l'interrupteur droit.
      default: []
      selector:
        action: {}
    
    right_press_double:
      name: Droit - appui double
      description: Action(s) à exécuter lors d'un appui double sur l'interrupteur droit.
      default: []
      selector:
        action:
    
    right_press_triple:
      name: Droit - appui triple
      description: Action(s) à exécuter lors d'un appui triple sur l'interrupteur droit.
      default: []
      selector:
        action:

    right_press_hold:
      name: Droit - appui maintenu
      description: Action(s) à exécuter lors d'un appui maintenu sur l'interrupteur droit.
      default: []
      selector:
        action: {}

    both_press_single:
      name: Les deux - appui simple
      description: Action(s) à exécuter lors d'un appui simple sur les 2 interrupteurs.
      default: []
      selector:
        action:
    
    both_press_double:
      name: Les deux - appui double
      description: Action(s) à exécuter lors d'un appui double sur les 2 interrupteurs.
      default: []
      selector:
        action:
    
    both_press_triple:
      name: Les deux - appui triple
      description: Action(s) à exécuter lors d'un appui triple sur les 2 interrupteurs.
      default: []
      selector:
        action:

    both_press_hold:
      name: Les deux - appui maintenu
      description: Action(s) à exécuter lors d'un appui maintenu sur les 2 interrupteurs.
      default: []
      selector:
        action:

mode: restart
max_exceeded: silent
trigger:
- platform: state
  entity_id: !input controller_entity

action:
  - variables:
      command: '{{ trigger.to_state.attributes.action }}'
      
  - choose:
      - conditions: "{{ command == 'single_left' }}"
        sequence: !input left_press_single
      
      - conditions: "{{ command == 'double_left' }}"
        sequence: !input left_press_double
      
      - conditions: "{{ command == 'triple_left' }}"
        sequence: !input left_press_triple
      
      - conditions: "{{ command == 'hold_left' }}"
        sequence: !input left_press_hold

      - conditions: "{{ command == 'single_right' }}"
        sequence: !input right_press_single
      
      - conditions: "{{ command == 'double_right' }}"
        sequence: !input right_press_double
      
      - conditions: "{{ command == 'triple_right' }}"
        sequence: !input right_press_triple
      
      - conditions: "{{ command == 'hold_right' }}"
        sequence: !input right_press_hold

      - conditions: "{{ command == 'single_both' }}"
        sequence: !input both_press_single
      
      - conditions: "{{ command == 'double_both' }}"
        sequence: !input both_press_double
      
      - conditions: "{{ command == 'triple_both' }}"
        sequence: !input both_press_triple
      
      - conditions: "{{ command == 'hold_both' }}"
        sequence: !input both_press_hold
